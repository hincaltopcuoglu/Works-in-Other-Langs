sel count(*) from DP_D_AMM.ChurnModel_EADSLLI_Score_M2
--1.744.371


drop table #ss;
create volatile table #ss as
(
select mainSubscriptionID,  "$LRP-ChurnFlag_U"  as Churn_Score, ChurnFlag_U
from DP_D_AMM.ChurnModel_SOHO_M3
)with data on commit preserve rows;
--1.944.818


-- sort ediyoruz.
DROP TABLE #ss_sorted;
CREATE VOLATILE TABLE #ss_sorted AS
(
SELECT  y.*
FROM (
SELECT t.*, ROW_NUMBER() OVER ( ORDER BY Churn_Score DESC) AS sort
FROM #ss t
) AS y
)
WITH DATA
ON COMMIT PRESERVE ROWS;
--1.944.818


DROP TABLE #ss_sortmax;
CREATE MULTISET VOLATILE TABLE #ss_sortmax AS 
(
SELECT	MAX(sort) AS sort_max
FROM	#ss_sorted
)
WITH DATA
ON COMMIT PRESERVE ROWS;


DROP TABLE #ss_sortfull;
CREATE MULTISET VOLATILE TABLE #ss_sortfull AS 
(
SELECT	a.*, b.sort_max, 
			(CASE	WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.01 THEN 0.01
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.02 THEN  0.02
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.03 THEN  0.03
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.04 THEN  0.04
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.05 THEN  0.05
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.06 THEN  0.06
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.07 THEN  0.07
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.08 THEN  0.08
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.09 THEN  0.09
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.10 THEN  0.10
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.11 THEN  0.11
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.12 THEN  0.12
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.13 THEN  0.13
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.14 THEN  0.14
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.15 THEN  0.15
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.16 THEN  0.16
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.17 THEN  0.17					
				    WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.18 THEN  0.18
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.19 THEN  0.19
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.20 THEN  0.20
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.21 THEN  0.21
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.22 THEN  0.22
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.23 THEN  0.23
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.24 THEN  0.24
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.25 THEN  0.25
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.26 THEN  0.26
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.27 THEN  0.27
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.28 THEN  0.28
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.29 THEN  0.29
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.30 THEN  0.30
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.31 THEN  0.31
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.32 THEN  0.32
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.33 THEN  0.33
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.34 THEN  0.34
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.35 THEN  0.35
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.36 THEN  0.36
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.37 THEN  0.37
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.38 THEN  0.38
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.39 THEN  0.39
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.40 THEN  0.40
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.41 THEN  0.41
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.42 THEN  0.42
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.43 THEN  0.43
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.44 THEN  0.44
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.45 THEN  0.45
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.46 THEN  0.46
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.47 THEN  0.47
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.48 THEN  0.48
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.49 THEN  0.49				 
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.50 THEN  0.50
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.51 THEN  0.51
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.52 THEN  0.52
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.53 THEN  0.53
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.54 THEN  0.54
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.55 THEN  0.55
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.56 THEN  0.56
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.57 THEN  0.57
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.58 THEN  0.58
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.59 THEN  0.59			
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.60 THEN  0.60
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.61 THEN  0.61
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.62 THEN  0.62
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.63 THEN  0.63
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.64 THEN  0.64
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.65 THEN  0.65
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.66 THEN  0.66
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.67 THEN  0.67
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.68 THEN  0.68
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.69 THEN  0.69		
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.70 THEN  0.70
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.71 THEN  0.71
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.72 THEN  0.72
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.73 THEN  0.73
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.74 THEN  0.74
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.75 THEN  0.75
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.76 THEN  0.76
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.77 THEN  0.77
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.78 THEN  0.78
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.79 THEN  0.79						
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.80 THEN  0.80
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.81 THEN  0.81
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.82 THEN  0.82
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.83 THEN  0.83
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.84 THEN  0.84
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.85 THEN  0.85
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.86 THEN  0.86
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.87 THEN  0.87
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.88 THEN  0.88
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.89 THEN  0.89		
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.90 THEN  0.90
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.91 THEN  0.91
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.92 THEN  0.92
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.93 THEN  0.93
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.94 THEN  0.94
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.95 THEN  0.95
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.96 THEN  0.96
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.97 THEN  0.97
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.98 THEN  0.98
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=0.99 THEN  0.99	
					WHEN (CAST(a.sort AS FLOAT))/(CAST(b.sort_max AS FLOAT)) <=1	THEN  1.00
					ELSE 1.00 END) AS ChurnSort_ARALIK
FROM	#ss_sorted a , #ss_sortmax b 
)
WITH DATA
ON COMMIT PRESERVE ROWS;
--


DROP TABLE #ss_lift_1; --lift 
CREATE MULTISET VOLATILE TABLE  #ss_lift_1 AS
(
SELECT   ChurnSort_ARALIK, 
		COUNT(*) AS ADET_ABONE,
		SUM(CASE WHEN ChurnFlag_U = 1 THEN 1 ELSE 0 END) AS ADET_IPTAL
FROM	#ss_sortfull
GROUP BY ChurnSort_ARALIK
)
WITH DATA
ON COMMIT PRESERVE ROWS;
--100

sel * from #ss_lift_1
